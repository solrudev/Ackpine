name: ci

on:
  pull_request: {}
  push:
    tags:
      - "*.*.*"
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Ackpine

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17
          cache: gradle

      - name: Validate binary compatibility
        run: |
          ./gradlew --no-daemon apiCheck || { exit_code=$?; printf "*** This PR changes Ackpine's public API. If this is intentional, run './gradlew apiDump' and commit the new API dumps. ***"; exit $exit_code; }

      - name: Build
        run: |
          ./gradlew buildAckpine --stacktrace --no-daemon

  publish:
    name: Upload artifacts
    runs-on: ubuntu-latest
    if: github.repository == 'solrudev/Ackpine' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, '[docs]')
    needs: [ build ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17
          cache: gradle

      - name: Publish
        run: |
          ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --max-workers 1 --no-daemon
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}

  publish-docs:
    name: Publish documentation
    runs-on: ubuntu-latest
    if: github.repository == 'solrudev/Ackpine' && github.ref == 'refs/heads/master'
    needs: [ build ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17
          cache: gradle

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.4

      - name: Prepare API docs
        run: |
          ./gradlew dokkaHtmlMultiModule --no-daemon

      - name: Build MkDocs
        run: |
          pip3 install --upgrade pip && pip3 install -v "mkdocs-material==9.3.2" && pip3 install mkdocs-minify-plugin
          mkdocs build

      - name: Deploy docs
        if: success()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          BRANCH: gh-pages
          FOLDER: site
          SINGLE_COMMIT: true